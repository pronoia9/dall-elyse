'use client';

import { useEffect, useState } from 'react';
import { usePathname } from 'next/navigation';
import styled from 'styled-components';
import { motion } from 'framer-motion';

import { Navbar, Preloader } from '@/components';
import { useStore } from '@/store';
import { GlobalStyles, StyledComponentsRegistry } from '@/styles';
import { getPosts, navigationData } from '@/utils';

// export const metadata = { title: 'DALL-Elyse', description: 'Generated by create next app' };

export default function RootLayout({ children }) {
  const pathname = usePathname();
  const { data, setData } = useStore((state) => ({ data: state.data, setData: state.setData }));
  const [preloading, setPreloading] = useState(true),
    [time, setTime] = useState(0);
  const preloaderTime = 10;

  // FETCHING GALLERY DATA (End the loading screen in 5s if theres local data and we dont have to fetch it)
  useEffect(() => {
    if (getPosts(setData)) setInterval(() => void setTime(preloaderTime), 5000);
  }, []);

  // SET TIMEOUT FOR THE PRELOADER (10s)
  useEffect(() => {
    setTimeout(() => void setTime(preloaderTime), 1000 * preloaderTime);
  }, []);

  // ONCE BOTH DATA IS SET & TIME IS AT LEAST 10s, DISABLE PRELOADER
  useEffect(() => {
    if (data.length && time >= 10) setPreloading(false);
  }, [data, time]);

  return (
    <html lang='en'>
      <head>
        <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' />
      </head>
      <StyledComponentsRegistry>
        <GlobalStyles />
        <body>
          <Container>
            {preloading ? (
              <Preloader />
            ) : (
              <>
                <Navbar />
                <Circle key={pathname} {...circleMotion()} />

                {/* Navigation Links */}
                {Object.values(navigationData[pathname]).map((link) => (
                  <Navigation key={`${pathname}-${link.title}`} {...link} />
                ))}

                <AnimatePresence>
                  <Main key={pathname} {...contentMotion(pathname)}>
                    {children}
                  </Main>
                </AnimatePresence>
              </>
            )}
          </Container>
        </body>
      </StyledComponentsRegistry>
    </html>
  );
}

const Container = styled.div`
  z-index: 5;
  position: fixed;
  width: 100%;
  height: calc(100% - 155px);
  left: 0;
  bottom: 0;
  display: block;
  background: linear-gradient(-90deg, rgba(0, 0, 0, 0) 0%, #000 150%);
  transition: transform 0.5s;

  overflow: hidden;
  scroll-behavior: smooth;

  @media only screen and (max-width: 960px) {
    height: calc(100% - 115px);
  }
`;

const Circle = styled(motion.div)`
  width: 100%;
  height: 100%;
  opacity: 0.85;
  position: fixed;
  top: 0;
  left: 0;
  z-index: -999;

  &:before {
    content: '';
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(ellipse at left top, #28282e 0%, #000000 65%);
    z-index: -999;
  }
`;

const Main = styled(motion.main)`
  width: calc(100% - 374px);
  max-width: 1280px;
  height: 100%;
  /* padding-top: 50px; */
  /* padding-bottom: 40px; */
  margin: auto;
  overflow: scroll;

  & > div:last-child {
    margin-bottom: 0;
  }

  @media only screen and (max-width: 1800px) {
    width: calc(100% - 352px);
  }

  @media only screen and (max-width: 1600px) {
    width: calc(100% - 312px);
  }

  @media only screen and (max-width: 1200px) {
    width: calc(100% - 272px);
  }

  @media only screen and (max-width: 960px) {
    width: calc(100% - 176px);
    margin: auto 40px auto auto;
    /* width: calc(100% - 280px);
    margin: auto; */
  }

  @media only screen and (max-width: 760px) {
    width: calc(100% - 40px);
    margin: auto;
    /* margin: auto auto auto 20px;
    width: calc(100% - 95px); */
    /* width: 100%;
    margin: auto; */
  }
`;
